## A basic GitHub Actions workflow for your Quarkus application.

name: Publish image and bundle

on:
  push:
    tags:
      - '*'

jobs:
  publish:
    name: "Build Image & push"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: gradle

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Determine Channel
        id: channel
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "channel=stable" >> $GITHUB_OUTPUT
          else
            echo "channel=staging" >> $GITHUB_OUTPUT
          fi
      - name: Determine Version
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_SHA:0:7}" >> $GITHUB_OUTPUT
          fi
      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push container image to GitHub Container Registry
        env:
          REGISTRY: ghcr.io
          GROUP: ${{ github.repository_owner }}
          IMAGE: ${{ github.event.repository.name }}
          K8S_NAMESPACE: ${{ github.event.repository.name }}
        run: |
          ./gradlew build \
            --no-daemon \
            -Pversion=${{ steps.version.outputs.version }}\
            -Dquarkus.container-image.build=true \
            -Dquarkus.container-image.push=true \
            -Dquarkus.container-image.registry=$REGISTRY \
            -Dquarkus.container-image.group=$GROUP \
            -Dquarkus.container-image.name=$IMAGE \
            -Dquarkus.kubernetes.namespace=$K8S_NAMESPACE \
            -Dquarkus.operator-sdk.bundle.channels=${{ steps.channel.outputs.channel }}
      - name: Push bundle
        uses: docker/build-push-action@v3
        with:
          context: ./build/bundle/minecraft-operator
          file: ./build/bundle/minecraft-operator/bundle.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-bundle:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}
        
  generate-catalog:
    name: "Generate and publish catalog"
    needs: publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: Get tags
        id: get_tags
        run: |
          git fetch --tags
          tags=$(git tag --list "1.*" --sort=v:refname | paste -sd "," -)
          echo "tags=$tags" >> $GITHUB_OUTPUT
      - name: Generate YAML file
        env:
          OPERATOR_PATH: "./catalog/minecraft-catalog/minecraft-operator/minecraft-operator-template.yaml"
        run: |
          echo "Schema: olm.semver" > $OPERATOR_PATH
          echo "GenerateMajorChannels: true" >> $OPERATOR_PATH
          echo "GenerateMinorChannels: true" >> $OPERATOR_PATH
          echo "Stable:" >> $OPERATOR_PATH
          echo "  Bundles:" >> $OPERATOR_PATH
          IFS=',' read -ra TAGS <<< "${{ steps.get_tags.outputs.tags }}"
          for tag in "${TAGS[@]}"
          do
            echo "  - Image: ghcr.io/merkeg/minecraft-operator-bundle:$tag" >> $OPERATOR_PATH
          done
      - name: Get Template contents
        run: cat ./catalog/minecraft-catalog/minecraft-operator/minecraft-operator-template.yaml
      - name: Build OPM catalog
        env:
          OPERATOR_TEMPLATE_PATH: "./catalog/minecraft-catalog/minecraft-operator/minecraft-operator-template.yaml"
          CATALOG_PATH: "./catalog/minecraft-operator/catalog.yaml"
        run: |
          ./catalog/opm alpha render-template semver -o yaml < $OPERATOR_TEMPLATE_PATH > CATALOG_PATH
      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push catalog
        uses: docker/build-push-action@v3
        with:
          context: ./catalog
          file: ./catalog/minecraft-catalog.Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}-catalog:latest
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}